name: Build and Deploy App

on:
  push:
    branches:
      - '*'

jobs:
  Build_Lint_Test_Coverage:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest pytest-asyncio
        if [ -f requirements_pro.txt ]; then pip install -r requirements_pro.txt; fi    
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Run Tests
      env:
        STOSC_DB_HOST: ${{ secrets.STOSC_DB_HOST }}
        STOSC_DB_PWD: ${{ secrets.STOSC_DB_PWD }}
        STOSC_LOGS: ${{ secrets.STOSC_LOGS }}
        STOSC_TELEGRAM_BOT_TOKEN: ${{ secrets.STOSC_TELEGRAM_BOT_TOKEN }}
        STOSC_DDB_ACCESS_KEY_ID: ${{ secrets.STOSC_DDB_ACCESS_KEY_ID }}
        STOSC_DDB_SECRET_ACCESS_KEY: ${{ secrets.STOSC_DDB_SECRET_ACCESS_KEY }}
        STOSC_XERO_STOSC_TENANT_ID: ${{ secrets.STOSC_XERO_STOSC_TENANT_ID }}
        STOSC_XERO_CLIENT_ID: ${{ secrets.STOSC_XERO_CLIENT_ID }}
        VIBIN_TELEGRAM_ID: ${{ secrets.VIBIN_TELEGRAM_ID }}
        ENV: 'PRO'
        LOGLEVEL: 'INFO'
      run: |
        pip install pytest-cov
        pytest --cov=./ --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true

  Deploy_to_VM:
    runs-on: ubuntu-latest
    needs: [ Build_Lint_Test_Coverage ]
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Remove unwanted folders
      run: |
        cd ${{ github.workspace }}
        rm -rf .git/ .github/ .gitignore

  
    - name: Stop the process and clear the folder
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: vibinjk
        key: ${{ secrets.KEY }}
        port: 22
        debug: false
        script: |
          ps -ef | grep 'run_stoscbot' | grep -v grep | awk '{print $2}' | xargs kill -9 2> /dev/null
          cd /home/vibinjk/stoscbot_pro/workspace
          rm -rf !\(.venv\)

    # Alternative: rsync -av -e ssh --delete --exclude='.git' --exclude='.session' --exclude='.session-journal' --exclude='.venv' --exclude='*.sh' --exclude='**/__pycache__' --exclude='.gitignore' --exclude='.env' --exclude='.vscode' . vibinjk@xxxx:/home/vibinjk/stoscbot          
    - name: Copy Files to Azure VM
      uses: horochx/deploy-via-scp@1.1.0
      with:
        local: ${{ github.workspace }}
        remote: /home/vibinjk/stoscbot_pro/
        host:  ${{ secrets.HOST }}
        port: 22
        user: vibinjk
        key: ${{ secrets.KEY }}
        # Ensure the existance of the remote file path
        ensureRemote: # optional

    - name: Install & Start the bot on Azure VM
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: vibinjk
        key: ${{ secrets.KEY }}
        port: 22
        script: |
          cd /home/vibinjk/stoscbot_pro/workspace
          cp ../credentials/* .
          cp ../credentials/.* .
          python3 -m venv .venv
          source .venv/bin/activate
          if [ -f requirements_pro.txt ]; then pip install --upgrade -r requirements_pro.txt; fi
          nohup python3 run_stoscbot.py > /dev/null 2>&1 &
